<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="24becd51-6f69-40e4-996f-893043ebfb75" name="horozov@HOROZOV 2013-06-25 13:45:44" runUser="TELERIK\horozov" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Default Test Settings" id="e17802b8-46d5-414a-81b7-750c11148f2e">
    <Deployment runDeploymentRoot="horozov_HOROZOV 2013-06-25 13_45_44">
      <DeploymentItem filename="C:\Work\TestExamples\AcademyTestProject\Wrappers\bin\Debug\Wrappers.dll" />
    </Deployment>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2013-06-25T13:45:44.9081371+03:00" queuing="2013-06-25T13:45:45.0051468+03:00" start="2013-06-25T13:45:45.0091472+03:00" finish="2013-06-25T13:46:05.6482109+03:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="ChartViewFirstTimeLoadTest" storage="c:\work\testexamples\academytestproject\tests\bin\debug\tests.dll" id="5acaf1af-af05-8a82-846a-7a71f76b208b">
      <Description>Check ChartView scenario when chart is loaded for the first time</Description>
      <Execution id="3ccd3feb-8dd1-4295-847e-7e80dd8e73b8" />
      <TestMethod codeBase="C:\Work\TestExamples\AcademyTestProject\Tests\bin\Debug\Tests.dll" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Tests.Tests, Tests" name="ChartViewFirstTimeLoadTest" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="5acaf1af-af05-8a82-846a-7a71f76b208b" executionId="3ccd3feb-8dd1-4295-847e-7e80dd8e73b8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="3ccd3feb-8dd1-4295-847e-7e80dd8e73b8" testId="5acaf1af-af05-8a82-846a-7a71f76b208b" testName="ChartViewFirstTimeLoadTest" computerName="HOROZOV" duration="00:00:10.4504477" startTime="2013-06-25T13:45:45.0121475+03:00" endTime="2013-06-25T13:45:55.6012063+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3ccd3feb-8dd1-4295-847e-7e80dd8e73b8">
      <Output>
        <ErrorInfo>
          <Message>Test method Tests.Tests.ChartViewFirstTimeLoadTest threw exception: 
System.ApplicationException: Exception thrown during the wait for a condition. Error: Unexpected error while waiting on condition. Error: ArtOfTest.WebAii.Exceptions.ExecuteCommandException: ExecuteCommand failed!
BrowserCommand (Type:'Silverlight',Info:'NotSet',Action:'NotSet',Target:'ElementId (tagName: 'object',occurrenceIndex: '0')',Data:'{"Method":null,"Property":null,"Reference":{"ObjectName":"$root","Path":"\/mainpage:-1:25935173","Properties":[]},"Reference2":null,"Type":4,"Value":"Skod9tIjAo\/ijq2K5bclautKdUA="}',ClientId:'Client_d0140cd7-0be0-400a-b228-a352a8311206',HasFrames:'False',FramesInfo:'',TargetFrameIndex:'-1',InError:'False',Response:'')
InnerException: System.InvalidOperationException: This client 'Client_d0140cd7-0be0-400a-b228-a352a8311206' is not connected to remote to be able to process command.
   at ArtOfTest.WebAii.Core.Browser.ExecuteCommandInternal(BrowserCommand request)
 ---&gt; System.InvalidOperationException: This client 'Client_d0140cd7-0be0-400a-b228-a352a8311206' is not connected to remote to be able to process command.
   at ArtOfTest.WebAii.Core.Browser.ExecuteCommandInternal(BrowserCommand request)
   --- End of inner exception stack trace ---
   at ArtOfTest.WebAii.Core.Browser.ExecuteCommandInternal(BrowserCommand request)
   at ArtOfTest.WebAii.Core.Browser.ExecuteCommand(BrowserCommand request, Boolean performDomRefresh, Boolean waitUntilReady)
   at ArtOfTest.WebAii.Silverlight.SilverlightProxy.ExecuteSLCommand(SilverlightCommand cmd)
   at ArtOfTest.WebAii.Silverlight.SilverlightProxy.GetVisualTree(IAutomationPeer root, String hash)
   at ArtOfTest.WebAii.Silverlight.VisualTree.Refresh()
   at ArtOfTest.WebAii.Silverlight.FrameworkElement.Refresh()
   at ArtOfTest.WebAii.Silverlight.VisualFind.RefreshRoot()
   at ArtOfTest.WebAii.Silverlight.VisualWait.WaitForExistsByFindInfo(VisualFindInfo findInfo)
   at ArtOfTest.Common.WaitAsync._worker_DoWork[T,V](Object waitParam)</Message>
          <StackTrace>    at ArtOfTest.Common.WaitSync.CheckResult(WaitSync wait, String extraExceptionInfo, Object target)
   at ArtOfTest.Common.WaitSync.For[T](Predicate`1 predicate, T target, Boolean invertCondition, Int32 timeout, WaitResultType errorResultType)
   at ArtOfTest.WebAii.Silverlight.VisualWait.ForExistsInternal(Int32 timeout, Boolean invertCondition)
   at ArtOfTest.WebAii.Silverlight.VisualWait.ForVisible(Int32 timeout)
   at ArtOfTest.WebAii.Silverlight.VisualFind.ReturnOrThrow(FrameworkElement e, String throwMessage)
   at ArtOfTest.WebAii.Silverlight.VisualFind.ByName(String name)
   at Tests.Tests.ChartViewFirstTimeLoadTest() in C:\Work\TestExamples\AcademyTestProject\Tests\Tests.cs:line 126
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>